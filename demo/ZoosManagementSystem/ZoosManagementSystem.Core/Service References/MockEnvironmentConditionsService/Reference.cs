//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZoosManagementSystem.Core.MockEnvironmentConditionsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnvironmentConditions", Namespace="http://schemas.datacontract.org/2004/07/ZoosManagementSystem.Interfaces.DataContr" +
        "acts")]
    [System.SerializableAttribute()]
    public partial class EnvironmentConditions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid EnvironmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float HumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LuminosityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MeasureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TemperatureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid EnvironmentId {
            get {
                return this.EnvironmentIdField;
            }
            set {
                if ((this.EnvironmentIdField.Equals(value) != true)) {
                    this.EnvironmentIdField = value;
                    this.RaisePropertyChanged("EnvironmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Humidity {
            get {
                return this.HumidityField;
            }
            set {
                if ((this.HumidityField.Equals(value) != true)) {
                    this.HumidityField = value;
                    this.RaisePropertyChanged("Humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Luminosity {
            get {
                return this.LuminosityField;
            }
            set {
                if ((this.LuminosityField.Equals(value) != true)) {
                    this.LuminosityField = value;
                    this.RaisePropertyChanged("Luminosity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MeasureTime {
            get {
                return this.MeasureTimeField;
            }
            set {
                if ((this.MeasureTimeField.Equals(value) != true)) {
                    this.MeasureTimeField = value;
                    this.RaisePropertyChanged("MeasureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MockEnvironmentConditionsService.IEnvironmentConditionsService")]
    public interface IEnvironmentConditionsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnvironmentConditionsService/GetEnvironmentConditions", ReplyAction="http://tempuri.org/IEnvironmentConditionsService/GetEnvironmentConditionsResponse" +
            "")]
        ZoosManagementSystem.Core.MockEnvironmentConditionsService.EnvironmentConditions GetEnvironmentConditions(System.Guid environmentId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IEnvironmentConditionsServiceChannel : ZoosManagementSystem.Core.MockEnvironmentConditionsService.IEnvironmentConditionsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class EnvironmentConditionsServiceClient : System.ServiceModel.ClientBase<ZoosManagementSystem.Core.MockEnvironmentConditionsService.IEnvironmentConditionsService>, ZoosManagementSystem.Core.MockEnvironmentConditionsService.IEnvironmentConditionsService {
        
        public EnvironmentConditionsServiceClient() {
        }
        
        public EnvironmentConditionsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnvironmentConditionsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnvironmentConditionsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnvironmentConditionsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ZoosManagementSystem.Core.MockEnvironmentConditionsService.EnvironmentConditions GetEnvironmentConditions(System.Guid environmentId) {
            return base.Channel.GetEnvironmentConditions(environmentId);
        }
    }
}
